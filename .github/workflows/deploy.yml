name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: coredatastore-swagger-mcp
  REGION: us-east4
  DOCKER_IMAGE_TAG: 0.0.1.${{ github.run_number }}
  IMAGE_NAME: us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/coredatastore/coredatastore-swagger-mcp:0.0.1.${{ github.run_number }}
  ARTIFACT_REGISTRY_HOST: us-east4-docker.pkg.dev

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ env.IMAGE_NAME }}
          outputs: type=docker,dest=/tmp/docker-image.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/docker-image.tar
          retention-days: 1

  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY_HOST }}

      - name: Create Artifact Registry Repository if it doesn't exist
        run: |
          if ! gcloud artifacts repositories describe coredatastore --location=${{ env.REGION }} 2>/dev/null; then
            echo "Creating Artifact Registry repository 'coredatastore'..."
            gcloud artifacts repositories create coredatastore \
              --repository-format=docker \
              --location=${{ env.REGION }} \
              --description="Repository for CoreDataStore MCP"
          else
            echo "Repository 'coredatastore' already exists."
          fi

      - name: Load Docker image
        run: |
          docker load --input /tmp/docker-image.tar
          docker images

      - name: Push Docker image to Artifact Registry
        run: docker push ${{ env.IMAGE_NAME }}

  deploy:
    name: Deploy
    needs: publish
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.IMAGE_NAME }}
          env_vars: |
            SWAGGER_URL=https://api.coredatastore.com/swagger/v1/swagger.json
            API_BASE_URL=https://api.coredatastore.com
          flags: '--memory 1Gi --port 3500 --allow-unauthenticated'

      - name: Show Output
        run: echo "${{ steps.deploy.outputs.url }}"
